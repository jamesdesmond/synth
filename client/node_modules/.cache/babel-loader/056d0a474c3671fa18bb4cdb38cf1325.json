{"ast":null,"code":"export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) => {\n  return (nativeAudioContext, {\n    mediaStreamTrack\n  }) => {\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n      return createNativeAudioNode(nativeAudioContext, ntvDCntxt => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n    } // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n\n\n    return createNativeAudioNode(nativeAudioContext, ntvDCntxt => {\n      const mediaStream = new MediaStream([mediaStreamTrack]);\n      const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream); // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n\n      if (mediaStreamTrack.kind !== 'audio') {\n        throw createInvalidStateError();\n      } // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n\n\n      if (isNativeOfflineAudioContext(ntvDCntxt)) {\n        throw new TypeError();\n      }\n\n      return nativeMediaStreamAudioSourceNode;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jamescoyne/Desktop/synth-master/client/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js"],"names":["createNativeMediaStreamTrackAudioSourceNodeFactory","createInvalidStateError","createNativeAudioNode","isNativeOfflineAudioContext","nativeAudioContext","mediaStreamTrack","createMediaStreamTrackSource","ntvDCntxt","mediaStream","MediaStream","nativeMediaStreamAudioSourceNode","createMediaStreamSource","kind","TypeError"],"mappings":"AAAA,OAAO,MAAMA,kDAAkD,GAAG,CAACC,uBAAD,EAA0BC,qBAA1B,EAAiDC,2BAAjD,KAAiF;AAC/I,SAAO,CAACC,kBAAD,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA8C;AACjD,QAAI,OAAOD,kBAAkB,CAACE,4BAA1B,KAA2D,UAA/D,EAA2E;AACvE,aAAOJ,qBAAqB,CAACE,kBAAD,EAAsBG,SAAD,IAAeA,SAAS,CAACD,4BAAV,CAAuCD,gBAAvC,CAApC,CAA5B;AACH,KAHgD,CAIjD;;;AACA,WAAOH,qBAAqB,CAACE,kBAAD,EAAsBG,SAAD,IAAe;AAC5D,YAAMC,WAAW,GAAG,IAAIC,WAAJ,CAAgB,CAACJ,gBAAD,CAAhB,CAApB;AACA,YAAMK,gCAAgC,GAAGH,SAAS,CAACI,uBAAV,CAAkCH,WAAlC,CAAzC,CAF4D,CAG5D;;AACA,UAAIH,gBAAgB,CAACO,IAAjB,KAA0B,OAA9B,EAAuC;AACnC,cAAMX,uBAAuB,EAA7B;AACH,OAN2D,CAO5D;;;AACA,UAAIE,2BAA2B,CAACI,SAAD,CAA/B,EAA4C;AACxC,cAAM,IAAIM,SAAJ,EAAN;AACH;;AACD,aAAOH,gCAAP;AACH,KAZ2B,CAA5B;AAaH,GAlBD;AAmBH,CApBM","sourcesContent":["export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n        }\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            const mediaStream = new MediaStream([mediaStreamTrack]);\n            const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream);\n            // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n            if (mediaStreamTrack.kind !== 'audio') {\n                throw createInvalidStateError();\n            }\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(ntvDCntxt)) {\n                throw new TypeError();\n            }\n            return nativeMediaStreamAudioSourceNode;\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js.map"]},"metadata":{},"sourceType":"module"}