{"ast":null,"code":"export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaElementAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options); // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw TypeError();\n      }\n\n      super(context, true, nativeMediaElementAudioSourceNode, null); // Bug #63: Edge does not expose the mediaElement yet.\n\n      this._mediaElement = options.mediaElement;\n      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n    }\n\n    get mediaElement() {\n      return this._nativeMediaElementAudioSourceNode.mediaElement === undefined ? this._mediaElement : this._nativeMediaElementAudioSourceNode.mediaElement;\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/jamescoyne/Desktop/synth-master/client/node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js"],"names":["createMediaElementAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaElementAudioSourceNode","getNativeContext","isNativeOfflineAudioContext","MediaElementAudioSourceNode","constructor","context","options","nativeContext","nativeMediaElementAudioSourceNode","TypeError","_mediaElement","mediaElement","_nativeMediaElementAudioSourceNode","undefined"],"mappings":"AAAA,OAAO,MAAMA,4CAA4C,GAAG,CAACC,oBAAD,EAAuBC,uCAAvB,EAAgEC,gBAAhE,EAAkFC,2BAAlF,KAAkH;AAC1K,SAAO,MAAMC,2BAAN,SAA0CJ,oBAA1C,CAA+D;AAClEK,IAAAA,WAAW,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAC1B,YAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAD,CAAtC;AACA,YAAMG,iCAAiC,GAAGR,uCAAuC,CAACO,aAAD,EAAgBD,OAAhB,CAAjF,CAF0B,CAG1B;;AACA,UAAIJ,2BAA2B,CAACK,aAAD,CAA/B,EAAgD;AAC5C,cAAME,SAAS,EAAf;AACH;;AACD,YAAMJ,OAAN,EAAe,IAAf,EAAqBG,iCAArB,EAAwD,IAAxD,EAP0B,CAQ1B;;AACA,WAAKE,aAAL,GAAqBJ,OAAO,CAACK,YAA7B;AACA,WAAKC,kCAAL,GAA0CJ,iCAA1C;AACH;;AACD,QAAIG,YAAJ,GAAmB;AACf,aAAQ,KAAKC,kCAAL,CAAwCD,YAAxC,KAAyDE,SAA1D,GACH,KAAKH,aADF,GAEH,KAAKE,kCAAL,CAAwCD,YAF5C;AAGH;;AAjBiE,GAAtE;AAmBH,CApBM","sourcesContent":["export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            // Bug #63: Edge does not expose the mediaElement yet.\n            this._mediaElement = options.mediaElement;\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return (this._nativeMediaElementAudioSourceNode.mediaElement === undefined) ?\n                this._mediaElement :\n                this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-element-audio-source-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}