{"ast":null,"code":"export const createAddSilentConnection = createNativeGainNode => {\n  return (nativeContext, nativeAudioScheduledSourceNode) => {\n    const nativeGainNode = createNativeGainNode(nativeContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    });\n    nativeAudioScheduledSourceNode.connect(nativeGainNode)\n    /*\n     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n     * used here to make sure to connect the right destination.\n     */\n    .connect(nativeGainNode.context.destination);\n\n    const disconnect = () => {\n      nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n      nativeGainNode.disconnect();\n    };\n\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n  };\n};","map":{"version":3,"sources":["/Users/jamescoyne/Desktop/synth-master/client/node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js"],"names":["createAddSilentConnection","createNativeGainNode","nativeContext","nativeAudioScheduledSourceNode","nativeGainNode","channelCount","channelCountMode","channelInterpretation","gain","connect","context","destination","disconnect","removeEventListener","addEventListener"],"mappings":"AAAA,OAAO,MAAMA,yBAAyB,GAAIC,oBAAD,IAA0B;AAC/D,SAAO,CAACC,aAAD,EAAgBC,8BAAhB,KAAmD;AACtD,UAAMC,cAAc,GAAGH,oBAAoB,CAACC,aAAD,EAAgB;AAAEG,MAAAA,YAAY,EAAE,CAAhB;AAAmBC,MAAAA,gBAAgB,EAAE,UAArC;AAAiDC,MAAAA,qBAAqB,EAAE,UAAxE;AAAoFC,MAAAA,IAAI,EAAE;AAA1F,KAAhB,CAA3C;AACAL,IAAAA,8BAA8B,CACzBM,OADL,CACaL,cADb;AAEI;;;;AAFJ,KAMKK,OANL,CAMaL,cAAc,CAACM,OAAf,CAAuBC,WANpC;;AAOA,UAAMC,UAAU,GAAG,MAAM;AACrBT,MAAAA,8BAA8B,CAACU,mBAA/B,CAAmD,OAAnD,EAA4DD,UAA5D;AACAT,MAAAA,8BAA8B,CAACS,UAA/B,CAA0CR,cAA1C;AACAA,MAAAA,cAAc,CAACQ,UAAf;AACH,KAJD;;AAKAT,IAAAA,8BAA8B,CAACW,gBAA/B,CAAgD,OAAhD,EAAyDF,UAAzD;AACH,GAfD;AAgBH,CAjBM","sourcesContent":["export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', gain: 0 });\n        nativeAudioScheduledSourceNode\n            .connect(nativeGainNode)\n            /*\n             * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n             * used here to make sure to connect the right destination.\n             */\n            .connect(nativeGainNode.context.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-silent-connection.js.map"]},"metadata":{},"sourceType":"module"}