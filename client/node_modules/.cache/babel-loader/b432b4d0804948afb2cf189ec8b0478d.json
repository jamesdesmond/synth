{"ast":null,"code":"export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\n\nexport const now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\n\nexport const immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\n\nexport const Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\n\nexport const Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\n\nexport const Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\n\nexport const Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\n\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\n\nexport const loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer); // this fills in name changes from 13.x to 14.x\n\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;","map":{"version":3,"sources":["../../Tone/index.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,EAAqB,UAArB,QAAuC,eAAvC;AACA,cAAc,WAAd;AACA,cAAc,WAAd;AACA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,eAAT,QAAgC,gCAAhC;AACA,SAAS,KAAT,QAAsB,eAAtB;AAEA,SAAS,SAAT,QAA0B,6BAA1B;AAEA;;;;;;AAKA,OAAO,MAAM,GAAG,GAAkB,UAAU,GAAG,GAAb,CAAiB,IAAjB,CAAsB,UAAU,EAAhC,CAA3B;AAEP;;;;;;AAKA,OAAO,MAAM,SAAS,GAAkB,UAAU,GAAG,SAAb,CAAuB,IAAvB,CAA4B,UAAU,EAAtC,CAAjC;AAEP;;;;;;AAKA,OAAO,MAAM,SAAS,GAAG,UAAU,GAAG,SAA/B;AAEP;;;;;;AAKA,OAAO,MAAM,WAAW,GAAG,UAAU,GAAG,WAAjC;AAEP;;;;;AAIA,OAAO,MAAM,QAAQ,GAAG,UAAU,GAAG,QAA9B;AAEP;;;;;;AAKA,OAAO,MAAM,IAAI,GAAG,UAAU,GAAG,IAA1B;AAEP;;;;;;AAKA,OAAO,MAAM,OAAO,GAAG,UAAU,EAA1B;AAEP;;;;;;AAKA,OAAO,MAAM,MAAM,GAAG,eAAe,CAAC,MAAhB,CAAuB,IAAvB,CAA4B,eAA5B,CAAf,C,CAEP;;AACA,SAAS,gBAAT,QAAiC,iCAAjC;AACA,SAAS,gBAAT,QAAiC,kCAAjC;AACA,OAAO,MAAM,MAAM,GAA2B,eAAvC;AACP,OAAO,MAAM,OAAO,GAA4B,gBAAzC;AACP,OAAO,MAAM,YAAY,GAA4B,gBAA9C","sourceRoot":"","sourcesContent":["export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport const now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport const immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport const loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer);\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}