{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      super(context, false, nativeMediaStreamAudioDestinationNode, null);\n      this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n    }\n\n    get stream() {\n      return this._nativeMediaStreamAudioDestinationNode.stream;\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/jamescoyne/Desktop/synth-master/client/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js"],"names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","createMediaStreamAudioDestinationNodeConstructor","audioNodeConstructor","createNativeMediaStreamAudioDestinationNode","getNativeContext","isNativeOfflineAudioContext","MediaStreamAudioDestinationNode","constructor","context","options","nativeContext","TypeError","mergedOptions","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream"],"mappings":"AAAA,MAAMA,eAAe,GAAG;AACpBC,EAAAA,YAAY,EAAE,CADM;AAEpBC,EAAAA,gBAAgB,EAAE,UAFE;AAGpBC,EAAAA,qBAAqB,EAAE;AAHH,CAAxB;AAKA,OAAO,MAAMC,gDAAgD,GAAG,CAACC,oBAAD,EAAuBC,2CAAvB,EAAoEC,gBAApE,EAAsFC,2BAAtF,KAAsH;AAClL,SAAO,MAAMC,+BAAN,SAA8CJ,oBAA9C,CAAmE;AACtEK,IAAAA,WAAW,CAACC,OAAD,EAAUC,OAAO,GAAGZ,eAApB,EAAqC;AAC5C,YAAMa,aAAa,GAAGN,gBAAgB,CAACI,OAAD,CAAtC,CAD4C,CAE5C;;AACA,UAAIH,2BAA2B,CAACK,aAAD,CAA/B,EAAgD;AAC5C,cAAM,IAAIC,SAAJ,EAAN;AACH;;AACD,YAAMC,aAAa,GAAG,EAAE,GAAGf,eAAL;AAAsB,WAAGY;AAAzB,OAAtB;AACA,YAAMI,qCAAqC,GAAGV,2CAA2C,CAACO,aAAD,EAAgBE,aAAhB,CAAzF;AACA,YAAMJ,OAAN,EAAe,KAAf,EAAsBK,qCAAtB,EAA6D,IAA7D;AACA,WAAKC,sCAAL,GAA8CD,qCAA9C;AACH;;AACD,QAAIE,MAAJ,GAAa;AACT,aAAO,KAAKD,sCAAL,CAA4CC,MAAnD;AACH;;AAdqE,GAA1E;AAgBH,CAjBM","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-audio-destination-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}